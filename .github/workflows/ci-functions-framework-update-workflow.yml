name: ci-functions-framework-update-workflow

on:
  #schedule:
  # Run every day at 10AM.
  #- cron: '0 10 * * *'
  workflow_dispatch:

jobs:
  update-functions-framework-ci-versions:
    strategy:
      matrix:
        language: ['python', 'php', 'go', 'ruby'] 
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Enable OIDC
    steps:
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Get available ${{ matrix.language }} versions
      run: |
        # Get all supported ${{ matrix.language }} versions and pass the space-separated versions
        # string to the next step
        versions=$(gcloud functions runtimes list --format="value(NAME)" --project=gae-runtimes-private --region=us-west1 | grep ^${{ matrix.language }} | tr '\n' ' ' | xargs)
        echo "::set-output name=versions::$versions"
      id: get_versions

    - name: Checkout functions-framework repo
      uses: actions/checkout@v2
      with:
        repository: GoogleCloudPlatform/functions-framework-${{ matrix.language }}

    # Sign the commit.
    # https://www.chainguard.dev/unchained/keyless-git-commit-signing-with-gitsign-and-github-actions
    - uses: chainguard-dev/actions/setup-gitsign@main

    - name: Update ${{ matrix.language }} versions
      run: |
        readarray -d ' ' -t versions <<< "${{ steps.get_versions.outputs.versions }}"
        # Trim newline from last element
        versions[-1]=$(printf '%s' "${versions[-1]}")
        lan=${{ matrix.language }}
        num=${#lan}
        
        versions_str=""
        for version in "${versions[@]}"; do
          major=${version:${num}:1}
          minor=${version:$((num+1))}
          if [[ "$lan" == "go" ]] && [[ "$major.$minor" == "1.11" ]]; then
            continue
          fi
          versions_str+="'$major.$minor', "
          # https://github.com/GoogleCloudPlatform/functions-framework-ruby/pull/154#pullrequestreview-1373215438
          if [[ "$lan" == "ruby" ]] && [[ "$major.$minor" == "3.0" ]]; then
            versions_str+="'3.1', "
          fi
        done
        # Remove the last comma and space
        versions_str=${versions_str%, *}

        # Only replace the first occurance
        sed -i "0,/^        ${{ matrix.language }}: \[.*/s//        ${{ matrix.language }}: \[$versions_str\]/" .github/workflows/conformance.yml
        sed -i "0,/^        ${{ matrix.language }}: \[.*/s//        ${{ matrix.language }}: \[$versions_str\]/" .github/workflows/unit.yml
  
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.PAT }}
        commit-message: "ci: Update ${{ matrix.language }} matrix"
        title: "[Automation] Update ${{ matrix.language }} matrix"
        body: |
          - ${{ matrix.language }} matrix updates

          Update the ${{ matrix.language }} matrix in the CI workflows to include the new supported runtimes.
 
          Auto-generated by ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        push-to-fork: chizhg/functions-framework-${{ matrix.language }}
        branch: update-${{ matrix.language }}-version-matrix
        signoff: true
        delete-branch: true
